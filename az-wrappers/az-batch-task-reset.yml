

 - name: Set input params for az_batch_task_reset
   set_fact: 
     az_batch_task_reset:
       input: 
         ###  Required parameter. The ID of the job containing the task.  ### 
        'job-id': "{{ item['job-id'] | default('') }}" 
         ###  Required parameter. The ID of the task to update.  ### 
        'task-id': "{{ item['task-id'] | default('') }}" 
         ###  Optional parameter. A file containing the constraints specification in JSON format. If this parameter is specified, all 'Constraints Arguments' are ignored.  ### 
        'json-file': "{{ item['json-file'] | default('') }}" 
         ###  Optional parameter. Batch service endpoint. Alternatively, set by environment variable: AZURE_BATCH_ENDPOINT.  ### 
        'account-endpoint': "{{ item['account-endpoint'] | default('') }}" 
         ###  Optional parameter. Batch account key. Alternatively, set by environment variable: AZURE_BATCH_ACCESS_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Batch account name. Alternatively, set by environment variable: AZURE_BATCH_ACCOUNT.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.  ### 
        'max-task-retry-count': "{{ item['max-task-retry-count'] | default('') }}" 
         ###  Optional parameter. The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. If this is not specified, there is no time limit on how long the task may run. Expected format is an ISO-8601 duration.  ### 
        'max-wall-clock-time': "{{ item['max-wall-clock-time'] | default('') }}" 
         ###  Optional parameter. The minimum time to retain the task directory on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the task directory and all its contents. The default is infinite, i.e. the task directory will be retained until the compute node is removed or reimaged. Expected format is an ISO-8601 duration.  ### 
        'retention-time': "{{ item['retention-time'] | default('') }}" 
         ###  Optional parameter. An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.  ### 
        'if-match': "{{ item['if-match'] | default('') }}" 
         ###  Optional parameter. A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.  ### 
        'if-modified-since': "{{ item['if-modified-since'] | default('') }}" 
         ###  Optional parameter. An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.  ### 
        'if-none-match': "{{ item['if-none-match'] | default('') }}" 
         ###  Optional parameter. A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.  ### 
        'if-unmodified-since': "{{ item['if-unmodified-since'] | default('') }}" 
 - debug: msg="{{ az_batch_task_reset }}"          
 - name: "az batch task reset: Reset the properties of a Batch task." 
   command: |                                      
     az batch task reset                            
                 --job-id {{ az_batch_task_reset.input['job-id'] }} 
                 --task-id {{ az_batch_task_reset.input['task-id'] }} 
                 {%if az_batch_task_reset.input['json-file'] %} --json-file az_batch_task_reset.input['json-file'] {%endif %} 
                 {%if az_batch_task_reset.input['account-endpoint'] %} --account-endpoint az_batch_task_reset.input['account-endpoint'] {%endif %} 
                 {%if az_batch_task_reset.input['account-key'] %} --account-key az_batch_task_reset.input['account-key'] {%endif %} 
                 {%if az_batch_task_reset.input['account-name'] %} --account-name az_batch_task_reset.input['account-name'] {%endif %} 
                 {%if az_batch_task_reset.input['max-task-retry-count'] %} --max-task-retry-count az_batch_task_reset.input['max-task-retry-count'] {%endif %} 
                 {%if az_batch_task_reset.input['max-wall-clock-time'] %} --max-wall-clock-time az_batch_task_reset.input['max-wall-clock-time'] {%endif %} 
                 {%if az_batch_task_reset.input['retention-time'] %} --retention-time az_batch_task_reset.input['retention-time'] {%endif %} 
                 {%if az_batch_task_reset.input['if-match'] %} --if-match az_batch_task_reset.input['if-match'] {%endif %} 
                 {%if az_batch_task_reset.input['if-modified-since'] %} --if-modified-since az_batch_task_reset.input['if-modified-since'] {%endif %} 
                 {%if az_batch_task_reset.input['if-none-match'] %} --if-none-match az_batch_task_reset.input['if-none-match'] {%endif %} 
                 {%if az_batch_task_reset.input['if-unmodified-since'] %} --if-unmodified-since az_batch_task_reset.input['if-unmodified-since'] {%endif %} 
   register: output  
 - set_fact: 
    az_batch_task_reset: "{{ az_batch_task_reset|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_batch_task_reset }}" 
