

 - name: Set input params for az_vmss_diagnostics_set
   set_fact: 
     az_vmss_diagnostics_set:
       input: 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Required parameter. Json string or a file path, which defines data to be collected.  ### 
        'settings': "{{ item['settings'] | default('') }}" 
         ###  Required parameter. Scale set name.  ### 
        'vmss-name': "{{ item['vmss-name'] | default('') }}" 
         ###  Optional parameter. By doing this, extension system will not pick the highest minor version for the specified version number, and will not auto update to the latest build/revision number on any scale set updates in future.  ### 
        'no-auto-upgrade': "{{ item['no-auto-upgrade'] | default('') }}" 
         ###  Optional parameter. Json string or a file path containing private configurations such as storage account keys, etc.  ### 
        'protected-settings': "{{ item['protected-settings'] | default('') }}" 
         ###  Optional parameter. Version of the diagnostics extension. Will use the latest if not specfied.  ### 
        'version': "{{ item['version'] | default('') }}" 
 - debug: msg="{{ az_vmss_diagnostics_set }}"          
 - name: "az vmss diagnostics set: Enable diagnostics on a VMSS." 
   command: |                                      
     az vmss diagnostics set                            
                 --resource-group {{ az_vmss_diagnostics_set.input['resource-group'] }} 
                 --settings {{ az_vmss_diagnostics_set.input['settings'] }} 
                 --vmss-name {{ az_vmss_diagnostics_set.input['vmss-name'] }} 
                 {%if az_vmss_diagnostics_set.input['no-auto-upgrade'] %} --no-auto-upgrade az_vmss_diagnostics_set.input['no-auto-upgrade'] {%endif %} 
                 {%if az_vmss_diagnostics_set.input['protected-settings'] %} --protected-settings az_vmss_diagnostics_set.input['protected-settings'] {%endif %} 
                 {%if az_vmss_diagnostics_set.input['version'] %} --version az_vmss_diagnostics_set.input['version'] {%endif %} 
   register: output  
 - set_fact: 
    az_vmss_diagnostics_set: "{{ az_vmss_diagnostics_set|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_vmss_diagnostics_set }}" 
