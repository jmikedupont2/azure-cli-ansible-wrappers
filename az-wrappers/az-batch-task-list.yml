

 - name: Set input params for az_batch_task_list
   set_fact: 
     az_batch_task_list:
       input: 
         ###  Required parameter. The ID of the job.  ### 
        'job-id': "{{ item['job-id'] | default('') }}" 
         ###  Optional parameter. Batch service endpoint. Alternatively, set by environment variable: AZURE_BATCH_ENDPOINT.  ### 
        'account-endpoint': "{{ item['account-endpoint'] | default('') }}" 
         ###  Optional parameter. Batch account key. Alternatively, set by environment variable: AZURE_BATCH_ACCESS_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Batch account name. Alternatively, set by environment variable: AZURE_BATCH_ACCOUNT.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. An OData $expand clause.  ### 
        'expand': "{{ item['expand'] | default('') }}" 
         ###  Optional parameter. An OData $filter clause.  ### 
        'filter': "{{ item['filter'] | default('') }}" 
         ###  Optional parameter. An OData $select clause.  ### 
        'select': "{{ item['select'] | default('') }}" 
 - debug: msg="{{ az_batch_task_list }}"          
 - name: "az batch task list: Lists all of the tasks that are associated with the specified job." 
   command: |                                      
     az batch task list                            
                 --job-id {{ az_batch_task_list.input['job-id'] }} 
                 {%if az_batch_task_list.input['account-endpoint'] %} --account-endpoint az_batch_task_list.input['account-endpoint'] {%endif %} 
                 {%if az_batch_task_list.input['account-key'] %} --account-key az_batch_task_list.input['account-key'] {%endif %} 
                 {%if az_batch_task_list.input['account-name'] %} --account-name az_batch_task_list.input['account-name'] {%endif %} 
                 {%if az_batch_task_list.input['expand'] %} --expand az_batch_task_list.input['expand'] {%endif %} 
                 {%if az_batch_task_list.input['filter'] %} --filter az_batch_task_list.input['filter'] {%endif %} 
                 {%if az_batch_task_list.input['select'] %} --select az_batch_task_list.input['select'] {%endif %} 
   register: output  
 - set_fact: 
    az_batch_task_list: "{{ az_batch_task_list|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_batch_task_list }}" 
