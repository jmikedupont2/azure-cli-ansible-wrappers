

 - name: Set input params for az_storage_share_delete
   set_fact: 
     az_storage_share_delete:
       input: 
         ###  Required parameter. The file share name.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Optional parameter. Specify the deletion strategy when the share has snapshots.  ### 
        'delete-snapshots': "{{ item['delete-snapshots'] | default('') }}" 
         ###  Optional parameter. Specify whether to throw an exception when the share doesn't exist. False by default.  ### 
        'fail-not-exist': "{{ item['fail-not-exist'] | default('') }}" 
         ###  Optional parameter. A string that represents the snapshot version, if applicable. Specify this argument to delete a specific snapshot only. delete_snapshots must be None if this is specified.  ### 
        'snapshot': "{{ item['snapshot'] | default('') }}" 
         ###  Optional parameter. Request timeout in seconds. Applies to each call to the service.  ### 
        'timeout': "{{ item['timeout'] | default('') }}" 
         ###  Optional parameter. Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING.  ### 
        'connection-string': "{{ item['connection-string'] | default('') }}" 
         ###  Optional parameter. A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN.  ### 
        'sas-token': "{{ item['sas-token'] | default('') }}" 
 - debug: msg="{{ az_storage_share_delete }}"          
 - name: "az storage share delete: Marks the specified share for deletion." 
   command: |                                      
     az storage share delete                            
                 --name {{ az_storage_share_delete.input['name'] }} 
                 {%if az_storage_share_delete.input['delete-snapshots'] %} --delete-snapshots az_storage_share_delete.input['delete-snapshots'] {%endif %} 
                 {%if az_storage_share_delete.input['fail-not-exist'] %} --fail-not-exist az_storage_share_delete.input['fail-not-exist'] {%endif %} 
                 {%if az_storage_share_delete.input['snapshot'] %} --snapshot az_storage_share_delete.input['snapshot'] {%endif %} 
                 {%if az_storage_share_delete.input['timeout'] %} --timeout az_storage_share_delete.input['timeout'] {%endif %} 
                 {%if az_storage_share_delete.input['account-key'] %} --account-key az_storage_share_delete.input['account-key'] {%endif %} 
                 {%if az_storage_share_delete.input['account-name'] %} --account-name az_storage_share_delete.input['account-name'] {%endif %} 
                 {%if az_storage_share_delete.input['connection-string'] %} --connection-string az_storage_share_delete.input['connection-string'] {%endif %} 
                 {%if az_storage_share_delete.input['sas-token'] %} --sas-token az_storage_share_delete.input['sas-token'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_share_delete: "{{ az_storage_share_delete|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_share_delete }}" 
