

 - name: Set input params for az_storage_blob_upload
   set_fact: 
     az_storage_blob_upload:
       input: 
         ###  Required parameter. The container name.  ### 
        'container-name': "{{ item['container-name'] | default('') }}" 
         ###  Required parameter. Path of the file to upload as the blob content.  ### 
        'file': "{{ item['file'] | default('') }}" 
         ###  Required parameter. The blob name.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Optional parameter. The cache control string.  ### 
        'content-cache-control': "{{ item['content-cache-control'] | default('') }}" 
         ###  Optional parameter. Conveys additional information about how to process the response payload, and can also be used to attach additional metadata.  ### 
        'content-disposition': "{{ item['content-disposition'] | default('') }}" 
         ###  Optional parameter. The content encoding type.  ### 
        'content-encoding': "{{ item['content-encoding'] | default('') }}" 
         ###  Optional parameter. The content language.  ### 
        'content-language': "{{ item['content-language'] | default('') }}" 
         ###  Optional parameter. The content's MD5 hash.  ### 
        'content-md5': "{{ item['content-md5'] | default('') }}" 
         ###  Optional parameter. The content MIME type.  ### 
        'content-type': "{{ item['content-type'] | default('') }}" 
         ###  Optional parameter. Required if the blob has an active lease.  ### 
        'lease-id': "{{ item['lease-id'] | default('') }}" 
         ###  Optional parameter. Maximum number of parallel connections to use when the blob size exceeds 64MB.  ### 
        'max-connections': "{{ item['max-connections'] | default('') }}" 
         ###  Optional parameter. The max length in bytes permitted for an append blob.  ### 
        'maxsize-condition': "{{ item['maxsize-condition'] | default('') }}" 
         ###  Optional parameter. Metadata in space-separated key=value pairs. This overwrites any existing metadata.  ### 
        'metadata': "{{ item['metadata'] | default('') }}" 
         ###  Optional parameter. A page blob tier value to set the blob to. The tier correlates to the size of the blob and number of allowed IOPS. This is only applicable to page blobs on premium storage accounts.  ### 
        'tier': "{{ item['tier'] | default('') }}" 
         ###  Optional parameter. Request timeout in seconds. Applies to each call to the service.  ### 
        'timeout': "{{ item['timeout'] | default('') }}" 
         ###  Optional parameter. Defaults to 'page' for *.vhd files, or 'block' otherwise.  ### 
        'type': "{{ item['type'] | default('') }}" 
         ###  Optional parameter. Specifies that an MD5 hash shall be calculated for each chunk of the blob and verified by the service when the chunk has arrived.  ### 
        'validate-content': "{{ item['validate-content'] | default('') }}" 
         ###  Optional parameter. An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified.  ### 
        'if-match': "{{ item['if-match'] | default('') }}" 
         ###  Optional parameter. Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z').  ### 
        'if-modified-since': "{{ item['if-modified-since'] | default('') }}" 
         ###  Optional parameter. An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character (*) to perform the operation only if the resource does not exist, and fail the operation if it does exist.  ### 
        'if-none-match': "{{ item['if-none-match'] | default('') }}" 
         ###  Optional parameter. Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z').  ### 
        'if-unmodified-since': "{{ item['if-unmodified-since'] | default('') }}" 
         ###  Optional parameter. Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING.  ### 
        'connection-string': "{{ item['connection-string'] | default('') }}" 
         ###  Optional parameter. A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN.  ### 
        'sas-token': "{{ item['sas-token'] | default('') }}" 
 - debug: msg="{{ az_storage_blob_upload }}"          
 - name: "az storage blob upload: Upload a file to a storage blob." 
   command: |                                      
     az storage blob upload                            
                 --container-name {{ az_storage_blob_upload.input['container-name'] }} 
                 --file {{ az_storage_blob_upload.input['file'] }} 
                 --name {{ az_storage_blob_upload.input['name'] }} 
                 {%if az_storage_blob_upload.input['content-cache-control'] %} --content-cache-control az_storage_blob_upload.input['content-cache-control'] {%endif %} 
                 {%if az_storage_blob_upload.input['content-disposition'] %} --content-disposition az_storage_blob_upload.input['content-disposition'] {%endif %} 
                 {%if az_storage_blob_upload.input['content-encoding'] %} --content-encoding az_storage_blob_upload.input['content-encoding'] {%endif %} 
                 {%if az_storage_blob_upload.input['content-language'] %} --content-language az_storage_blob_upload.input['content-language'] {%endif %} 
                 {%if az_storage_blob_upload.input['content-md5'] %} --content-md5 az_storage_blob_upload.input['content-md5'] {%endif %} 
                 {%if az_storage_blob_upload.input['content-type'] %} --content-type az_storage_blob_upload.input['content-type'] {%endif %} 
                 {%if az_storage_blob_upload.input['lease-id'] %} --lease-id az_storage_blob_upload.input['lease-id'] {%endif %} 
                 {%if az_storage_blob_upload.input['max-connections'] %} --max-connections az_storage_blob_upload.input['max-connections'] {%endif %} 
                 {%if az_storage_blob_upload.input['maxsize-condition'] %} --maxsize-condition az_storage_blob_upload.input['maxsize-condition'] {%endif %} 
                 {%if az_storage_blob_upload.input['metadata'] %} --metadata az_storage_blob_upload.input['metadata'] {%endif %} 
                 {%if az_storage_blob_upload.input['tier'] %} --tier az_storage_blob_upload.input['tier'] {%endif %} 
                 {%if az_storage_blob_upload.input['timeout'] %} --timeout az_storage_blob_upload.input['timeout'] {%endif %} 
                 {%if az_storage_blob_upload.input['type'] %} --type az_storage_blob_upload.input['type'] {%endif %} 
                 {%if az_storage_blob_upload.input['validate-content'] %} --validate-content az_storage_blob_upload.input['validate-content'] {%endif %} 
                 {%if az_storage_blob_upload.input['if-match'] %} --if-match az_storage_blob_upload.input['if-match'] {%endif %} 
                 {%if az_storage_blob_upload.input['if-modified-since'] %} --if-modified-since az_storage_blob_upload.input['if-modified-since'] {%endif %} 
                 {%if az_storage_blob_upload.input['if-none-match'] %} --if-none-match az_storage_blob_upload.input['if-none-match'] {%endif %} 
                 {%if az_storage_blob_upload.input['if-unmodified-since'] %} --if-unmodified-since az_storage_blob_upload.input['if-unmodified-since'] {%endif %} 
                 {%if az_storage_blob_upload.input['account-key'] %} --account-key az_storage_blob_upload.input['account-key'] {%endif %} 
                 {%if az_storage_blob_upload.input['account-name'] %} --account-name az_storage_blob_upload.input['account-name'] {%endif %} 
                 {%if az_storage_blob_upload.input['connection-string'] %} --connection-string az_storage_blob_upload.input['connection-string'] {%endif %} 
                 {%if az_storage_blob_upload.input['sas-token'] %} --sas-token az_storage_blob_upload.input['sas-token'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_blob_upload: "{{ az_storage_blob_upload|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_blob_upload }}" 
