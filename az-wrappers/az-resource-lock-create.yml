

 - name: Set input params for az_resource_lock_create
   set_fact: 
     az_resource_lock_create:
       input: 
         ###  Required parameter.   ### 
        'lock-type': "{{ item['lock-type'] | default('') }}" 
         ###  Required parameter. Name of the lock.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Optional parameter. Notes about this lock.  ### 
        'notes': "{{ item['notes'] | default('') }}" 
         ###  Optional parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. Provider namespace (Ex: 'Microsoft.Provider').  ### 
        'namespace': "{{ item['namespace'] | default('') }}" 
         ###  Optional parameter. The parent path (Ex: 'resA/myA/resB/myB').  ### 
        'parent': "{{ item['parent'] | default('') }}" 
         ###  Optional parameter. If an ID is given, other resource arguments should not be given.  ### 
        'resource': "{{ item['resource'] | default('') }}" 
         ###  Optional parameter. The resource type (Ex: 'resC'). Can also accept namespace/type format (Ex: 'Microsoft.Provider/resC').  ### 
        'resource-type': "{{ item['resource-type'] | default('') }}" 
 - debug: msg="{{ az_resource_lock_create }}"          
 - name: "az resource lock create: Create a resource-level lock." 
   command: |                                      
     az resource lock create                            
                 --lock-type {{ az_resource_lock_create.input['lock-type'] }} 
                 --name {{ az_resource_lock_create.input['name'] }} 
                 {%if az_resource_lock_create.input['notes'] %} --notes az_resource_lock_create.input['notes'] {%endif %} 
                 {%if az_resource_lock_create.input['resource-group'] %} --resource-group az_resource_lock_create.input['resource-group'] {%endif %} 
                 {%if az_resource_lock_create.input['namespace'] %} --namespace az_resource_lock_create.input['namespace'] {%endif %} 
                 {%if az_resource_lock_create.input['parent'] %} --parent az_resource_lock_create.input['parent'] {%endif %} 
                 {%if az_resource_lock_create.input['resource'] %} --resource az_resource_lock_create.input['resource'] {%endif %} 
                 {%if az_resource_lock_create.input['resource-type'] %} --resource-type az_resource_lock_create.input['resource-type'] {%endif %} 
   register: output  
 - set_fact: 
    az_resource_lock_create: "{{ az_resource_lock_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_resource_lock_create }}" 
