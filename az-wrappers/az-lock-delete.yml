

 - name: Set input params for az_lock_delete
   set_fact: 
     az_lock_delete:
       input: 
         ###  Optional parameter. One or more resource IDs (space delimited). If provided, no other "Resource Id" arguments should be specified.  ### 
        'ids': "{{ item['ids'] | default('') }}" 
         ###  Optional parameter. Name of the lock.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Optional parameter. Provider namespace (Ex: 'Microsoft.Provider').  ### 
        'namespace': "{{ item['namespace'] | default('') }}" 
         ###  Optional parameter. The parent path (Ex: 'resA/myA/resB/myB').  ### 
        'parent': "{{ item['parent'] | default('') }}" 
         ###  Optional parameter. Name or ID of the resource being locked. If an ID is given, other resource arguments should not be given.  ### 
        'resource': "{{ item['resource'] | default('') }}" 
         ###  Optional parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The resource type (Ex: 'resC'). Can also accept namespace/type format (Ex: 'Microsoft.Provider/resC').  ### 
        'resource-type': "{{ item['resource-type'] | default('') }}" 
 - debug: msg="{{ az_lock_delete }}"          
 - name: "az lock delete: Delete a lock." 
   command: |                                      
     az lock delete                            
                 {%if az_lock_delete.input['ids'] %} --ids az_lock_delete.input['ids'] {%endif %} 
                 {%if az_lock_delete.input['name'] %} --name az_lock_delete.input['name'] {%endif %} 
                 {%if az_lock_delete.input['namespace'] %} --namespace az_lock_delete.input['namespace'] {%endif %} 
                 {%if az_lock_delete.input['parent'] %} --parent az_lock_delete.input['parent'] {%endif %} 
                 {%if az_lock_delete.input['resource'] %} --resource az_lock_delete.input['resource'] {%endif %} 
                 {%if az_lock_delete.input['resource-group'] %} --resource-group az_lock_delete.input['resource-group'] {%endif %} 
                 {%if az_lock_delete.input['resource-type'] %} --resource-type az_lock_delete.input['resource-type'] {%endif %} 
   register: output  
 - set_fact: 
    az_lock_delete: "{{ az_lock_delete|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_lock_delete }}" 
