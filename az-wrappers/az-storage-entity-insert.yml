

 - name: Set input params for az_storage_entity_insert
   set_fact: 
     az_storage_entity_insert:
       input: 
         ###  Required parameter. A space-separated list of key=value pairs. Must contain a PartitionKey and a RowKey.  ### 
        'entity': "{{ item['entity'] | default('') }}" 
         ###  Required parameter. The name of the table to insert the entity into.  ### 
        'table-name': "{{ item['table-name'] | default('') }}" 
         ###  Optional parameter. Behavior when an entity already exists for the specified PartitionKey and RowKey.  ### 
        'if-exists': "{{ item['if-exists'] | default('') }}" 
         ###  Optional parameter. The server timeout, expressed in seconds.  ### 
        'timeout': "{{ item['timeout'] | default('') }}" 
         ###  Optional parameter. Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING.  ### 
        'connection-string': "{{ item['connection-string'] | default('') }}" 
         ###  Optional parameter. A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN.  ### 
        'sas-token': "{{ item['sas-token'] | default('') }}" 
 - debug: msg="{{ az_storage_entity_insert }}"          
 - name: "az storage entity insert: Insert an entity into a table." 
   command: |                                      
     az storage entity insert                            
                 --entity {{ az_storage_entity_insert.input['entity'] }} 
                 --table-name {{ az_storage_entity_insert.input['table-name'] }} 
                 {%if az_storage_entity_insert.input['if-exists'] %} --if-exists az_storage_entity_insert.input['if-exists'] {%endif %} 
                 {%if az_storage_entity_insert.input['timeout'] %} --timeout az_storage_entity_insert.input['timeout'] {%endif %} 
                 {%if az_storage_entity_insert.input['account-key'] %} --account-key az_storage_entity_insert.input['account-key'] {%endif %} 
                 {%if az_storage_entity_insert.input['account-name'] %} --account-name az_storage_entity_insert.input['account-name'] {%endif %} 
                 {%if az_storage_entity_insert.input['connection-string'] %} --connection-string az_storage_entity_insert.input['connection-string'] {%endif %} 
                 {%if az_storage_entity_insert.input['sas-token'] %} --sas-token az_storage_entity_insert.input['sas-token'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_entity_insert: "{{ az_storage_entity_insert|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_entity_insert }}" 
