

 - name: Set input params for az_storage_blob_lease_break
   set_fact: 
     az_storage_blob_lease_break:
       input: 
         ###  Required parameter. The blob name.  ### 
        'blob-name': "{{ item['blob-name'] | default('') }}" 
         ###  Required parameter. The container name.  ### 
        'container-name': "{{ item['container-name'] | default('') }}" 
         ###  Optional parameter. For a break operation, this is the proposed duration of seconds that the lease should continue before it is broken, between 0 and 60 seconds. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.  ### 
        'lease-break-period': "{{ item['lease-break-period'] | default('') }}" 
         ###  Optional parameter. Request timeout in seconds. Applies to each call to the service.  ### 
        'timeout': "{{ item['timeout'] | default('') }}" 
         ###  Optional parameter. An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag matches the value specified.  ### 
        'if-match': "{{ item['if-match'] | default('') }}" 
         ###  Optional parameter. Alter only if modified since supplied UTC datetime (Y-m-d'T'H:M'Z').  ### 
        'if-modified-since': "{{ item['if-modified-since'] | default('') }}" 
         ###  Optional parameter. An ETag value, or the wildcard character (*). Specify this header to perform the operation only if the resource's ETag does not match the value specified. Specify the wildcard character (*) to perform the operation only if the resource does not exist, and fail the operation if it does exist.  ### 
        'if-none-match': "{{ item['if-none-match'] | default('') }}" 
         ###  Optional parameter. Alter only if unmodified since supplied UTC datetime (Y-m-d'T'H:M'Z').  ### 
        'if-unmodified-since': "{{ item['if-unmodified-since'] | default('') }}" 
         ###  Optional parameter. Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING.  ### 
        'connection-string': "{{ item['connection-string'] | default('') }}" 
         ###  Optional parameter. A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN.  ### 
        'sas-token': "{{ item['sas-token'] | default('') }}" 
 - debug: msg="{{ az_storage_blob_lease_break }}"          
 - name: "az storage blob lease break: Breaks the lease, if the blob has an active lease." 
   command: |                                      
     az storage blob lease break                            
                 --blob-name {{ az_storage_blob_lease_break.input['blob-name'] }} 
                 --container-name {{ az_storage_blob_lease_break.input['container-name'] }} 
                 {%if az_storage_blob_lease_break.input['lease-break-period'] %} --lease-break-period az_storage_blob_lease_break.input['lease-break-period'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['timeout'] %} --timeout az_storage_blob_lease_break.input['timeout'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['if-match'] %} --if-match az_storage_blob_lease_break.input['if-match'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['if-modified-since'] %} --if-modified-since az_storage_blob_lease_break.input['if-modified-since'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['if-none-match'] %} --if-none-match az_storage_blob_lease_break.input['if-none-match'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['if-unmodified-since'] %} --if-unmodified-since az_storage_blob_lease_break.input['if-unmodified-since'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['account-key'] %} --account-key az_storage_blob_lease_break.input['account-key'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['account-name'] %} --account-name az_storage_blob_lease_break.input['account-name'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['connection-string'] %} --connection-string az_storage_blob_lease_break.input['connection-string'] {%endif %} 
                 {%if az_storage_blob_lease_break.input['sas-token'] %} --sas-token az_storage_blob_lease_break.input['sas-token'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_blob_lease_break: "{{ az_storage_blob_lease_break|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_blob_lease_break }}" 
