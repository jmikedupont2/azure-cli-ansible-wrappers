

 - name: Set input params for az_acr_webhook_update
   set_fact: 
     az_acr_webhook_update:
       input: 
         ###  Required parameter. The name of the webhook.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. The name of the container registry. You can configure the default registry name using `az configure --defaults acr=&lt;registry name&gt;`.  ### 
        'registry': "{{ item['registry'] | default('') }}" 
         ###  Optional parameter. Space separated list of actions that trigger the webhook to post notifications.  ### 
        'actions': "{{ item['actions'] | default('') }}" 
         ###  Optional parameter. Space separated custom headers in 'key[=value]' format that will be added to the webhook notifications. Use "" to clear existing headers.  ### 
        'headers': "{{ item['headers'] | default('') }}" 
         ###  Optional parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means events for all repositories.  ### 
        'scope': "{{ item['scope'] | default('') }}" 
         ###  Optional parameter. Indicates whether the webhook is enabled.  ### 
        'status': "{{ item['status'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. The service URI for the webhook to post notifications.  ### 
        'uri': "{{ item['uri'] | default('') }}" 
         ###  Optional parameter. Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.  ### 
        'add': "{{ item['add'] | default('') }}" 
         ###  Optional parameter. Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.  ### 
        'remove': "{{ item['remove'] | default('') }}" 
         ###  Optional parameter. Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.  ### 
        'set': "{{ item['set'] | default('') }}" 
 - debug: msg="{{ az_acr_webhook_update }}"          
 - name: "az acr webhook update: Update a webhook." 
   command: |                                      
     az acr webhook update                            
                 --name {{ az_acr_webhook_update.input['name'] }} 
                 --registry {{ az_acr_webhook_update.input['registry'] }} 
                 {%if az_acr_webhook_update.input['actions'] %} --actions az_acr_webhook_update.input['actions'] {%endif %} 
                 {%if az_acr_webhook_update.input['headers'] %} --headers az_acr_webhook_update.input['headers'] {%endif %} 
                 {%if az_acr_webhook_update.input['resource-group'] %} --resource-group az_acr_webhook_update.input['resource-group'] {%endif %} 
                 {%if az_acr_webhook_update.input['scope'] %} --scope az_acr_webhook_update.input['scope'] {%endif %} 
                 {%if az_acr_webhook_update.input['status'] %} --status az_acr_webhook_update.input['status'] {%endif %} 
                 {%if az_acr_webhook_update.input['rtags'] %} --tags az_acr_webhook_update.input['rtags'] {%endif %} 
                 {%if az_acr_webhook_update.input['uri'] %} --uri az_acr_webhook_update.input['uri'] {%endif %} 
                 {%if az_acr_webhook_update.input['add'] %} --add az_acr_webhook_update.input['add'] {%endif %} 
                 {%if az_acr_webhook_update.input['remove'] %} --remove az_acr_webhook_update.input['remove'] {%endif %} 
                 {%if az_acr_webhook_update.input['set'] %} --set az_acr_webhook_update.input['set'] {%endif %} 
   register: output  
 - set_fact: 
    az_acr_webhook_update: "{{ az_acr_webhook_update|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_acr_webhook_update }}" 
