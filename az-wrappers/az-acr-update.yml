

 - name: Set input params for az_acr_update
   set_fact: 
     az_acr_update:
       input: 
         ###  Required parameter. The name of the container registry. You can configure the default registry name using `az configure --defaults acr=&lt;registry name&gt;`.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Optional parameter. Indicates whether the admin user is enabled.  ### 
        'admin-enabled': "{{ item['admin-enabled'] | default('') }}" 
         ###  Optional parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The SKU of the container registry.  ### 
        'sku': "{{ item['sku'] | default('') }}" 
         ###  Optional parameter. Provide the name of an existing storage account if you're recreating a container registry over a previous registry created storage account. Only applicable to Classic SKU.  ### 
        'storage-account-name': "{{ item['storage-account-name'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.  ### 
        'add': "{{ item['add'] | default('') }}" 
         ###  Optional parameter. Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.  ### 
        'remove': "{{ item['remove'] | default('') }}" 
         ###  Optional parameter. Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.  ### 
        'set': "{{ item['set'] | default('') }}" 
 - debug: msg="{{ az_acr_update }}"          
 - name: "az acr update: Update a container registry." 
   command: |                                      
     az acr update                            
                 --name {{ az_acr_update.input['name'] }} 
                 {%if az_acr_update.input['admin-enabled'] %} --admin-enabled az_acr_update.input['admin-enabled'] {%endif %} 
                 {%if az_acr_update.input['resource-group'] %} --resource-group az_acr_update.input['resource-group'] {%endif %} 
                 {%if az_acr_update.input['sku'] %} --sku az_acr_update.input['sku'] {%endif %} 
                 {%if az_acr_update.input['storage-account-name'] %} --storage-account-name az_acr_update.input['storage-account-name'] {%endif %} 
                 {%if az_acr_update.input['rtags'] %} --tags az_acr_update.input['rtags'] {%endif %} 
                 {%if az_acr_update.input['add'] %} --add az_acr_update.input['add'] {%endif %} 
                 {%if az_acr_update.input['remove'] %} --remove az_acr_update.input['remove'] {%endif %} 
                 {%if az_acr_update.input['set'] %} --set az_acr_update.input['set'] {%endif %} 
   register: output  
 - set_fact: 
    az_acr_update: "{{ az_acr_update|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_acr_update }}" 
