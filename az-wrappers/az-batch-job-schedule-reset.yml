

 - name: Set input params for az_batch_job_schedule_reset
   set_fact: 
     az_batch_job_schedule_reset:
       input: 
         ###  Required parameter. The ID of the job schedule to update.  ### 
        'job-schedule-id': "{{ item['job-schedule-id'] | default('') }}" 
         ###  Optional parameter. A file containing the job schedule update parameter specification in JSON format. If this parameter is specified, all 'Job Schedule Arguments' are ignored.  ### 
        'json-file': "{{ item['json-file'] | default('') }}" 
         ###  Optional parameter. Batch service endpoint. Alternatively, set by environment variable: AZURE_BATCH_ENDPOINT.  ### 
        'account-endpoint': "{{ item['account-endpoint'] | default('') }}" 
         ###  Optional parameter. Batch account key. Alternatively, set by environment variable: AZURE_BATCH_ACCESS_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Batch account name. Alternatively, set by environment variable: AZURE_BATCH_ACCOUNT.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. A list of name-value pairs associated with the job schedule as metadata. If you do not specify this element, it takes the default value of an empty list; in effect, any existing metadata is deleted. Space separated values in 'key=value' format.  ### 
        'metadata': "{{ item['metadata'] | default('') }}" 
         ###  Optional parameter. A list of name-value pairs associated with each job created under this schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code. Space separated values in 'key=value' format.  ### 
        'job-metadata': "{{ item['job-metadata'] | default('') }}" 
         ###  Optional parameter. The action the Batch service should take when all tasks in a job created under this schedule are in the completed state. Note that if a job contains no tasks, then all tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic job termination without a Job Manager, you should initially set onAllTasksComplete to noAction and update the job properties to set onAllTasksComplete to terminateJob once you have finished adding tasks. The default is noAction.  ### 
        'on-all-tasks-complete': "{{ item['on-all-tasks-complete'] | default('') }}" 
         ###  Optional parameter. The priority of jobs created under this schedule. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all jobs under the job schedule. You can update a job's priority after it has been created using by using the update job API.  ### 
        'priority': "{{ item['priority'] | default('') }}" 
         ###  Optional parameter. Whether tasks in the job can define dependencies on each other. The default is false. True if flag present.  ### 
        'uses-task-dependencies': "{{ item['uses-task-dependencies'] | default('') }}" 
         ###  Optional parameter. A list of application packages that the Batch service will deploy to the compute node before running the command line. Application packages are downloaded and deployed to a shared directory, not the task working directory. Therefore, if a referenced package is already on the compute node, and is up to date, then it is not re-downloaded; the existing copy on the compute node is used. If a referenced application package cannot be installed, for example because the package has been deleted or because download failed, the task fails. Space separated application IDs with optional version in 'id[#version]' format.  ### 
        'job-manager-task-application-package-references': "{{ item['job-manager-task-application-package-references'] | default('') }}" 
         ###  Optional parameter. The command line of the Job Manager task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.  ### 
        'job-manager-task-command-line': "{{ item['job-manager-task-command-line'] | default('') }}" 
         ###  Optional parameter. A list of environment variable settings for the Job Manager task. Space separated values in 'key=value' format.  ### 
        'job-manager-task-environment-settings': "{{ item['job-manager-task-environment-settings'] | default('') }}" 
         ###  Optional parameter. A string that uniquely identifies the Job Manager task within the job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.  ### 
        'job-manager-task-id': "{{ item['job-manager-task-id'] | default('') }}" 
         ###  Optional parameter. A list of files that the Batch service will download to the compute node before running the command line. Files listed under this element are located in the task's working directory. Space separated resource references in filename=blobsource format.  ### 
        'job-manager-task-resource-files': "{{ item['job-manager-task-resource-files'] | default('') }}" 
         ###  Optional parameter. The id of an existing pool. All the tasks of the job will run on the specified pool.  ### 
        'pool-id': "{{ item['pool-id'] | default('') }}" 
         ###  Optional parameter. A time after which no job will be created under this job schedule. The schedule will move to the completed state as soon as this deadline is past and there is no active job under this job schedule. If you do not specify a doNotRunAfter time, and you are creating a recurring job schedule, the job schedule will remain active until you explicitly terminate it. Expected format is an ISO-8601 timestamp.  ### 
        'do-not-run-after': "{{ item['do-not-run-after'] | default('') }}" 
         ###  Optional parameter. The earliest time at which any job may be created under this job schedule. If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately. Expected format is an ISO-8601 timestamp.  ### 
        'do-not-run-until': "{{ item['do-not-run-until'] | default('') }}" 
         ###  Optional parameter. The time interval between the start times of two successive jobs under the job schedule. A job schedule can have at most one active job under it at any given time. Because a job schedule can have at most one active job under it at any given time, if it is time to create a new job under a job schedule, but the previous job is still running, the Batch service will not create the new job until the previous job finishes. If the previous job does not finish within the startWindow period of the new recurrenceInterval, then no new job will be scheduled for that interval. For recurring jobs, you should normally specify a jobManagerTask in the jobSpecification. If you do not use jobManagerTask, you will need an external process to monitor when jobs are created, add tasks to the jobs and terminate the jobs ready for the next recurrence. The default is that the schedule does not recur: one job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that job finishes. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Expected format is an ISO-8601 duration.  ### 
        'recurrence-interval': "{{ item['recurrence-interval'] | default('') }}" 
         ###  Optional parameter. The time interval, starting from the time at which the schedule indicates a job should be created, within which a job must be created. If a job is not created within the startWindow interval, then the 'opportunity' is lost; no job will be created until the next recurrence of the schedule. If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the job that is 'due' in one recurrenceInterval is not carried forward into the next recurrence interval. The default is infinite. The minimum value is 1 minute. If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Expected format is an ISO-8601 duration.  ### 
        'start-window': "{{ item['start-window'] | default('') }}" 
         ###  Optional parameter. An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.  ### 
        'if-match': "{{ item['if-match'] | default('') }}" 
         ###  Optional parameter. A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.  ### 
        'if-modified-since': "{{ item['if-modified-since'] | default('') }}" 
         ###  Optional parameter. An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.  ### 
        'if-none-match': "{{ item['if-none-match'] | default('') }}" 
         ###  Optional parameter. A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.  ### 
        'if-unmodified-since': "{{ item['if-unmodified-since'] | default('') }}" 
 - debug: msg="{{ az_batch_job_schedule_reset }}"          
 - name: "az batch job-schedule reset: Reset the properties of a job schedule.  An updated job specification only applies to new jobs." 
   command: |                                      
     az batch job-schedule reset                            
                 --job-schedule-id {{ az_batch_job_schedule_reset.input['job-schedule-id'] }} 
                 {%if az_batch_job_schedule_reset.input['json-file'] %} --json-file az_batch_job_schedule_reset.input['json-file'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['account-endpoint'] %} --account-endpoint az_batch_job_schedule_reset.input['account-endpoint'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['account-key'] %} --account-key az_batch_job_schedule_reset.input['account-key'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['account-name'] %} --account-name az_batch_job_schedule_reset.input['account-name'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['metadata'] %} --metadata az_batch_job_schedule_reset.input['metadata'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-metadata'] %} --job-metadata az_batch_job_schedule_reset.input['job-metadata'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['on-all-tasks-complete'] %} --on-all-tasks-complete az_batch_job_schedule_reset.input['on-all-tasks-complete'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['priority'] %} --priority az_batch_job_schedule_reset.input['priority'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['uses-task-dependencies'] %} --uses-task-dependencies az_batch_job_schedule_reset.input['uses-task-dependencies'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-manager-task-application-package-references'] %} --job-manager-task-application-package-references az_batch_job_schedule_reset.input['job-manager-task-application-package-references'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-manager-task-command-line'] %} --job-manager-task-command-line az_batch_job_schedule_reset.input['job-manager-task-command-line'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-manager-task-environment-settings'] %} --job-manager-task-environment-settings az_batch_job_schedule_reset.input['job-manager-task-environment-settings'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-manager-task-id'] %} --job-manager-task-id az_batch_job_schedule_reset.input['job-manager-task-id'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['job-manager-task-resource-files'] %} --job-manager-task-resource-files az_batch_job_schedule_reset.input['job-manager-task-resource-files'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['pool-id'] %} --pool-id az_batch_job_schedule_reset.input['pool-id'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['do-not-run-after'] %} --do-not-run-after az_batch_job_schedule_reset.input['do-not-run-after'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['do-not-run-until'] %} --do-not-run-until az_batch_job_schedule_reset.input['do-not-run-until'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['recurrence-interval'] %} --recurrence-interval az_batch_job_schedule_reset.input['recurrence-interval'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['start-window'] %} --start-window az_batch_job_schedule_reset.input['start-window'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['if-match'] %} --if-match az_batch_job_schedule_reset.input['if-match'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['if-modified-since'] %} --if-modified-since az_batch_job_schedule_reset.input['if-modified-since'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['if-none-match'] %} --if-none-match az_batch_job_schedule_reset.input['if-none-match'] {%endif %} 
                 {%if az_batch_job_schedule_reset.input['if-unmodified-since'] %} --if-unmodified-since az_batch_job_schedule_reset.input['if-unmodified-since'] {%endif %} 
   register: output  
 - set_fact: 
    az_batch_job_schedule_reset: "{{ az_batch_job_schedule_reset|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_batch_job_schedule_reset }}" 
