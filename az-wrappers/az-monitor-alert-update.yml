

 - name: Set input params for az_monitor_alert_update
   set_fact: 
     az_monitor_alert_update:
       input: 
         ###  Required parameter. Name of the alert rule.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. Description of the rule.  ### 
        'description': "{{ item['description'] | default('') }}" 
         ###  Optional parameter.   ### 
        'enabled': "{{ item['enabled'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. Add an action to fire when the alert is triggered.  ### 
        'add-action': "{{ item['add-action'] | default('') }}" 
         ###  Optional parameter. Email the service owners if an alert is triggered.  ### 
        'email-service-owners': "{{ item['email-service-owners'] | default('') }}" 
         ###  Optional parameter. Remove one or more actions.  ### 
        'remove-action': "{{ item['remove-action'] | default('') }}" 
         ###  Optional parameter. Type of aggregation to apply based on --period.  ### 
        'aggregation': "{{ item['aggregation'] | default('') }}" 
         ###  Optional parameter. The condition which triggers the rule.  ### 
        'condition': "{{ item['condition'] | default('') }}" 
         ###  Optional parameter. Name of the metric to base the rule on.  ### 
        'metric': "{{ item['metric'] | default('') }}" 
         ###  Optional parameter. How to compare the metric against the threshold.  ### 
        'operator': "{{ item['operator'] | default('') }}" 
         ###  Optional parameter. Time span over which to apply --aggregation, in nDnHnMnS shorthand or full ISO8601 format.  ### 
        'period': "{{ item['period'] | default('') }}" 
         ###  Optional parameter. Numeric threshold at which to trigger the alert.  ### 
        'threshold': "{{ item['threshold'] | default('') }}" 
         ###  Optional parameter. ID of the resource to target for the alert rule.  ### 
        'target': "{{ item['target'] | default('') }}" 
         ###  Optional parameter. Target resource provider namespace.  ### 
        'target-namespace': "{{ item['target-namespace'] | default('') }}" 
         ###  Optional parameter. Target resource parent path, if applicable.  ### 
        'target-parent': "{{ item['target-parent'] | default('') }}" 
         ###  Optional parameter. Target resource type. Can also accept namespace/type format (Ex: 'Microsoft.Compute/virtualMachines)').  ### 
        'target-type': "{{ item['target-type'] | default('') }}" 
         ###  Optional parameter. Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.  ### 
        'add': "{{ item['add'] | default('') }}" 
         ###  Optional parameter. Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.  ### 
        'remove': "{{ item['remove'] | default('') }}" 
         ###  Optional parameter. Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.  ### 
        'set': "{{ item['set'] | default('') }}" 
 - debug: msg="{{ az_monitor_alert_update }}"          
 - name: "az monitor alert update: Update a metric-based alert rule." 
   command: |                                      
     az monitor alert update                            
                 --name {{ az_monitor_alert_update.input['name'] }} 
                 --resource-group {{ az_monitor_alert_update.input['resource-group'] }} 
                 {%if az_monitor_alert_update.input['description'] %} --description az_monitor_alert_update.input['description'] {%endif %} 
                 {%if az_monitor_alert_update.input['enabled'] %} --enabled az_monitor_alert_update.input['enabled'] {%endif %} 
                 {%if az_monitor_alert_update.input['rtags'] %} --tags az_monitor_alert_update.input['rtags'] {%endif %} 
                 {%if az_monitor_alert_update.input['add-action'] %} --add-action az_monitor_alert_update.input['add-action'] {%endif %} 
                 {%if az_monitor_alert_update.input['email-service-owners'] %} --email-service-owners az_monitor_alert_update.input['email-service-owners'] {%endif %} 
                 {%if az_monitor_alert_update.input['remove-action'] %} --remove-action az_monitor_alert_update.input['remove-action'] {%endif %} 
                 {%if az_monitor_alert_update.input['aggregation'] %} --aggregation az_monitor_alert_update.input['aggregation'] {%endif %} 
                 {%if az_monitor_alert_update.input['condition'] %} --condition az_monitor_alert_update.input['condition'] {%endif %} 
                 {%if az_monitor_alert_update.input['metric'] %} --metric az_monitor_alert_update.input['metric'] {%endif %} 
                 {%if az_monitor_alert_update.input['operator'] %} --operator az_monitor_alert_update.input['operator'] {%endif %} 
                 {%if az_monitor_alert_update.input['period'] %} --period az_monitor_alert_update.input['period'] {%endif %} 
                 {%if az_monitor_alert_update.input['threshold'] %} --threshold az_monitor_alert_update.input['threshold'] {%endif %} 
                 {%if az_monitor_alert_update.input['target'] %} --target az_monitor_alert_update.input['target'] {%endif %} 
                 {%if az_monitor_alert_update.input['target-namespace'] %} --target-namespace az_monitor_alert_update.input['target-namespace'] {%endif %} 
                 {%if az_monitor_alert_update.input['target-parent'] %} --target-parent az_monitor_alert_update.input['target-parent'] {%endif %} 
                 {%if az_monitor_alert_update.input['target-type'] %} --target-type az_monitor_alert_update.input['target-type'] {%endif %} 
                 {%if az_monitor_alert_update.input['add'] %} --add az_monitor_alert_update.input['add'] {%endif %} 
                 {%if az_monitor_alert_update.input['remove'] %} --remove az_monitor_alert_update.input['remove'] {%endif %} 
                 {%if az_monitor_alert_update.input['set'] %} --set az_monitor_alert_update.input['set'] {%endif %} 
   register: output  
 - set_fact: 
    az_monitor_alert_update: "{{ az_monitor_alert_update|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_monitor_alert_update }}" 
