

 - name: Set input params for az_network_vnet_gateway_vpn_client_generate
   set_fact: 
     az_network_vnet_gateway_vpn_client_generate:
       input: 
         ###  Required parameter. Name of the VNet gateway.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter.   ### 
        'authentication-method': "{{ item['authentication-method'] | default('') }}" 
         ###  Optional parameter. Space separated list of client root certificate public certificate data in Base-64 format. Optional for external Radius-based auth with EAPTLS.  ### 
        'client-root-certificates': "{{ item['client-root-certificates'] | default('') }}" 
         ###  Optional parameter.   ### 
        'processor-architecture': "{{ item['processor-architecture'] | default('') }}" 
         ###  Optional parameter. Public certificate data for the Radius server auth certificate in Base-64 format. Required only if external Radius auth has been configured with EAPTLS auth.  ### 
        'radius-server-auth-certificate': "{{ item['radius-server-auth-certificate'] | default('') }}" 
         ###  Optional parameter. Generate VPN client package using legacy implementation.  ### 
        'use-legacy': "{{ item['use-legacy'] | default('') }}" 
 - debug: msg="{{ az_network_vnet_gateway_vpn_client_generate }}"          
 - name: "az network vnet-gateway vpn-client generate: Generates a binary client file that can be used to connect to a VPN." 
   command: |                                      
     az network vnet-gateway vpn-client generate                            
                 --name {{ az_network_vnet_gateway_vpn_client_generate.input['name'] }} 
                 --resource-group {{ az_network_vnet_gateway_vpn_client_generate.input['resource-group'] }} 
                 {%if az_network_vnet_gateway_vpn_client_generate.input['authentication-method'] %} --authentication-method az_network_vnet_gateway_vpn_client_generate.input['authentication-method'] {%endif %} 
                 {%if az_network_vnet_gateway_vpn_client_generate.input['client-root-certificates'] %} --client-root-certificates az_network_vnet_gateway_vpn_client_generate.input['client-root-certificates'] {%endif %} 
                 {%if az_network_vnet_gateway_vpn_client_generate.input['processor-architecture'] %} --processor-architecture az_network_vnet_gateway_vpn_client_generate.input['processor-architecture'] {%endif %} 
                 {%if az_network_vnet_gateway_vpn_client_generate.input['radius-server-auth-certificate'] %} --radius-server-auth-certificate az_network_vnet_gateway_vpn_client_generate.input['radius-server-auth-certificate'] {%endif %} 
                 {%if az_network_vnet_gateway_vpn_client_generate.input['use-legacy'] %} --use-legacy az_network_vnet_gateway_vpn_client_generate.input['use-legacy'] {%endif %} 
   register: output  
 - set_fact: 
    az_network_vnet_gateway_vpn_client_generate: "{{ az_network_vnet_gateway_vpn_client_generate|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_network_vnet_gateway_vpn_client_generate }}" 
