

 - name: Set input params for az_container_create
   set_fact: 
     az_container_create:
       input: 
         ###  Required parameter. The container image name.  ### 
        'image': "{{ item['image'] | default('') }}" 
         ###  Required parameter. The name of the container group.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The command line to run when the container is started, e.g. '/bin/bash -c myscript.sh'.  ### 
        'command-line': "{{ item['command-line'] | default('') }}" 
         ###  Optional parameter. The required number of CPU cores of the containers.  ### 
        'cpu': "{{ item['cpu'] | default('') }}" 
         ###  Optional parameter. A list of environment variable for the container. Space separated values in 'key=value' format.  ### 
        'environment-variables': "{{ item['environment-variables'] | default('') }}" 
         ###  Optional parameter. The IP address type of the container group.  ### 
        'ip-address': "{{ item['ip-address'] | default('') }}" 
         ###  Optional parameter. Location. You can configure the default location using `az configure --defaults location=&lt;location&gt;`.  ### 
        'location': "{{ item['location'] | default('') }}" 
         ###  Optional parameter. The required memory of the containers in GB.  ### 
        'memory': "{{ item['memory'] | default('') }}" 
         ###  Optional parameter. The OS type of the containers.  ### 
        'os-type': "{{ item['os-type'] | default('') }}" 
         ###  Optional parameter. The ports to open.  ### 
        'ports': "{{ item['ports'] | default('') }}" 
         ###  Optional parameter. Restart policy for all containers within the container group.  ### 
        'restart-policy': "{{ item['restart-policy'] | default('') }}" 
         ###  Optional parameter. The storage account access key used to access the Azure File share.  ### 
        'azure-file-volume-account-key': "{{ item['azure-file-volume-account-key'] | default('') }}" 
         ###  Optional parameter. The name of the storage account that contains the Azure File share.  ### 
        'azure-file-volume-account-name': "{{ item['azure-file-volume-account-name'] | default('') }}" 
         ###  Optional parameter. The path within the container where the volume should be mounted. Must not contain colon (:).  ### 
        'azure-file-volume-mount-path': "{{ item['azure-file-volume-mount-path'] | default('') }}" 
         ###  Optional parameter. The name of the Azure File share to be mounted as a volume.  ### 
        'azure-file-volume-share-name': "{{ item['azure-file-volume-share-name'] | default('') }}" 
         ###  Optional parameter. The container image registry login server.  ### 
        'registry-login-server': "{{ item['registry-login-server'] | default('') }}" 
         ###  Optional parameter. The password to log in container image registry server.  ### 
        'registry-password': "{{ item['registry-password'] | default('') }}" 
         ###  Optional parameter. The username to log in container image registry server.  ### 
        'registry-username': "{{ item['registry-username'] | default('') }}" 
 - debug: msg="{{ az_container_create }}"          
 - name: "az container create: Create a container group." 
   command: |                                      
     az container create                            
                 --image {{ az_container_create.input['image'] }} 
                 --name {{ az_container_create.input['name'] }} 
                 --resource-group {{ az_container_create.input['resource-group'] }} 
                 {%if az_container_create.input['command-line'] %} --command-line az_container_create.input['command-line'] {%endif %} 
                 {%if az_container_create.input['cpu'] %} --cpu az_container_create.input['cpu'] {%endif %} 
                 {%if az_container_create.input['environment-variables'] %} --environment-variables az_container_create.input['environment-variables'] {%endif %} 
                 {%if az_container_create.input['ip-address'] %} --ip-address az_container_create.input['ip-address'] {%endif %} 
                 {%if az_container_create.input['location'] %} --location az_container_create.input['location'] {%endif %} 
                 {%if az_container_create.input['memory'] %} --memory az_container_create.input['memory'] {%endif %} 
                 {%if az_container_create.input['os-type'] %} --os-type az_container_create.input['os-type'] {%endif %} 
                 {%if az_container_create.input['ports'] %} --ports az_container_create.input['ports'] {%endif %} 
                 {%if az_container_create.input['restart-policy'] %} --restart-policy az_container_create.input['restart-policy'] {%endif %} 
                 {%if az_container_create.input['azure-file-volume-account-key'] %} --azure-file-volume-account-key az_container_create.input['azure-file-volume-account-key'] {%endif %} 
                 {%if az_container_create.input['azure-file-volume-account-name'] %} --azure-file-volume-account-name az_container_create.input['azure-file-volume-account-name'] {%endif %} 
                 {%if az_container_create.input['azure-file-volume-mount-path'] %} --azure-file-volume-mount-path az_container_create.input['azure-file-volume-mount-path'] {%endif %} 
                 {%if az_container_create.input['azure-file-volume-share-name'] %} --azure-file-volume-share-name az_container_create.input['azure-file-volume-share-name'] {%endif %} 
                 {%if az_container_create.input['registry-login-server'] %} --registry-login-server az_container_create.input['registry-login-server'] {%endif %} 
                 {%if az_container_create.input['registry-password'] %} --registry-password az_container_create.input['registry-password'] {%endif %} 
                 {%if az_container_create.input['registry-username'] %} --registry-username az_container_create.input['registry-username'] {%endif %} 
   register: output  
 - set_fact: 
    az_container_create: "{{ az_container_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_container_create }}" 
