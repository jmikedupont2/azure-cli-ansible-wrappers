

 - name: Set input params for az_role_assignment_create
   set_fact: 
     az_role_assignment_create:
       input: 
         ###  Required parameter. Role name or id.  ### 
        'role': "{{ item['role'] | default('') }}" 
         ###  Optional parameter. Represent a user, group, or service principal. supported format: object id, user sign-in name, or service principal name.  ### 
        'assignee': "{{ item['assignee'] | default('') }}" 
         ###  Optional parameter. Assignee's graph object id, such as the 'principal id' from a managed service identity. Use this instead of '--assignee' to bypass graph permission issues.  ### 
        'assignee-object-id': "{{ item['assignee-object-id'] | default('') }}" 
         ###  Optional parameter. Use it only if the role or assignment was added at the level of a resource group.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. Scope at which the role assignment or definition applies to, e.g., /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM.  ### 
        'scope': "{{ item['scope'] | default('') }}" 
 - debug: msg="{{ az_role_assignment_create }}"          
 - name: "az role assignment create: Create a new role assignment for a user, group, or service principal." 
   command: |                                      
     az role assignment create                            
                 --role {{ az_role_assignment_create.input['role'] }} 
                 {%if az_role_assignment_create.input['assignee'] %} --assignee az_role_assignment_create.input['assignee'] {%endif %} 
                 {%if az_role_assignment_create.input['assignee-object-id'] %} --assignee-object-id az_role_assignment_create.input['assignee-object-id'] {%endif %} 
                 {%if az_role_assignment_create.input['resource-group'] %} --resource-group az_role_assignment_create.input['resource-group'] {%endif %} 
                 {%if az_role_assignment_create.input['scope'] %} --scope az_role_assignment_create.input['scope'] {%endif %} 
   register: output  
 - set_fact: 
    az_role_assignment_create: "{{ az_role_assignment_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_role_assignment_create }}" 
