

 - name: Set input params for az_acr_webhook_create
   set_fact: 
     az_acr_webhook_create:
       input: 
         ###  Required parameter. Space separated list of actions that trigger the webhook to post notifications.  ### 
        'actions': "{{ item['actions'] | default('') }}" 
         ###  Required parameter. The name of the webhook.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. The name of the container registry. You can configure the default registry name using `az configure --defaults acr=&lt;registry name&gt;`.  ### 
        'registry': "{{ item['registry'] | default('') }}" 
         ###  Required parameter. The service URI for the webhook to post notifications.  ### 
        'uri': "{{ item['uri'] | default('') }}" 
         ###  Optional parameter. Space separated custom headers in 'key[=value]' format that will be added to the webhook notifications. Use "" to clear existing headers.  ### 
        'headers': "{{ item['headers'] | default('') }}" 
         ###  Optional parameter. Location. You can configure the default location using `az configure --defaults location=&lt;location&gt;`.  ### 
        'location': "{{ item['location'] | default('') }}" 
         ###  Optional parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means events for all repositories.  ### 
        'scope': "{{ item['scope'] | default('') }}" 
         ###  Optional parameter. Indicates whether the webhook is enabled.  ### 
        'status': "{{ item['status'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
 - debug: msg="{{ az_acr_webhook_create }}"          
 - name: "az acr webhook create: Create a webhook for a container registry." 
   command: |                                      
     az acr webhook create                            
                 --actions {{ az_acr_webhook_create.input['actions'] }} 
                 --name {{ az_acr_webhook_create.input['name'] }} 
                 --registry {{ az_acr_webhook_create.input['registry'] }} 
                 --uri {{ az_acr_webhook_create.input['uri'] }} 
                 {%if az_acr_webhook_create.input['headers'] %} --headers az_acr_webhook_create.input['headers'] {%endif %} 
                 {%if az_acr_webhook_create.input['location'] %} --location az_acr_webhook_create.input['location'] {%endif %} 
                 {%if az_acr_webhook_create.input['resource-group'] %} --resource-group az_acr_webhook_create.input['resource-group'] {%endif %} 
                 {%if az_acr_webhook_create.input['scope'] %} --scope az_acr_webhook_create.input['scope'] {%endif %} 
                 {%if az_acr_webhook_create.input['status'] %} --status az_acr_webhook_create.input['status'] {%endif %} 
                 {%if az_acr_webhook_create.input['rtags'] %} --tags az_acr_webhook_create.input['rtags'] {%endif %} 
   register: output  
 - set_fact: 
    az_acr_webhook_create: "{{ az_acr_webhook_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_acr_webhook_create }}" 
