

 - name: Set input params for az_network_vpn_connection_create
   set_fact: 
     az_network_vpn_connection_create:
       input: 
         ###  Required parameter. Connection name.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Required parameter. Name or ID of the source virtual network gateway.  ### 
        'vnet-gateway1': "{{ item['vnet-gateway1'] | default('') }}" 
         ###  Optional parameter. The authorization key for the VPN connection.  ### 
        'authorization-key': "{{ item['authorization-key'] | default('') }}" 
         ###  Optional parameter. Enable BGP for this VPN connection.  ### 
        'enable-bgp': "{{ item['enable-bgp'] | default('') }}" 
         ###  Optional parameter. Location. You can configure the default location using `az configure --defaults location=&lt;location&gt;`.  ### 
        'location': "{{ item['location'] | default('') }}" 
         ###  Optional parameter. Do not wait for the long-running operation to finish.  ### 
        'no-wait': "{{ item['no-wait'] | default('') }}" 
         ###  Optional parameter.   ### 
        'routing-weight': "{{ item['routing-weight'] | default('') }}" 
         ###  Optional parameter. Shared IPSec key.  ### 
        'shared-key': "{{ item['shared-key'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. Enable policy-based traffic selectors.  ### 
        'use-policy-based-traffic-selectors': "{{ item['use-policy-based-traffic-selectors'] | default('') }}" 
         ###  Optional parameter. Display and validate the ARM template but do not create any resources.  ### 
        'validate': "{{ item['validate'] | default('') }}" 
         ###  Optional parameter. Name or ID of the destination ExpressRoute to connect to using an 'ExpressRoute' connection.  ### 
        'express-route-circuit2': "{{ item['express-route-circuit2'] | default('') }}" 
         ###  Optional parameter. Name or ID of the destination local network gateway to connect to using an 'IPSec' connection.  ### 
        'local-gateway2': "{{ item['local-gateway2'] | default('') }}" 
         ###  Optional parameter. Name or ID of the destination virtual network gateway to connect to using a 'Vnet2Vnet' connection.  ### 
        'vnet-gateway2': "{{ item['vnet-gateway2'] | default('') }}" 
 - debug: msg="{{ az_network_vpn_connection_create }}"          
 - name: "az network vpn-connection create: Create a VPN connection." 
   command: |                                      
     az network vpn-connection create                            
                 --name {{ az_network_vpn_connection_create.input['name'] }} 
                 --resource-group {{ az_network_vpn_connection_create.input['resource-group'] }} 
                 --vnet-gateway1 {{ az_network_vpn_connection_create.input['vnet-gateway1'] }} 
                 {%if az_network_vpn_connection_create.input['authorization-key'] %} --authorization-key az_network_vpn_connection_create.input['authorization-key'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['enable-bgp'] %} --enable-bgp az_network_vpn_connection_create.input['enable-bgp'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['location'] %} --location az_network_vpn_connection_create.input['location'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['no-wait'] %} --no-wait az_network_vpn_connection_create.input['no-wait'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['routing-weight'] %} --routing-weight az_network_vpn_connection_create.input['routing-weight'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['shared-key'] %} --shared-key az_network_vpn_connection_create.input['shared-key'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['rtags'] %} --tags az_network_vpn_connection_create.input['rtags'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['use-policy-based-traffic-selectors'] %} --use-policy-based-traffic-selectors az_network_vpn_connection_create.input['use-policy-based-traffic-selectors'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['validate'] %} --validate az_network_vpn_connection_create.input['validate'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['express-route-circuit2'] %} --express-route-circuit2 az_network_vpn_connection_create.input['express-route-circuit2'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['local-gateway2'] %} --local-gateway2 az_network_vpn_connection_create.input['local-gateway2'] {%endif %} 
                 {%if az_network_vpn_connection_create.input['vnet-gateway2'] %} --vnet-gateway2 az_network_vpn_connection_create.input['vnet-gateway2'] {%endif %} 
   register: output  
 - set_fact: 
    az_network_vpn_connection_create: "{{ az_network_vpn_connection_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_network_vpn_connection_create }}" 
