

 - name: Set input params for az_storage_account_update
   set_fact: 
     az_storage_account_update:
       input: 
         ###  Required parameter. The storage account name.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. The access tier used for billing StandardBlob accounts. Cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types. It is required for StandardBlob accounts during creation.  ### 
        'access-tier': "{{ item['access-tier'] | default('') }}" 
         ###  Optional parameter. Generate and assign a new Storage Account Identity for this storage account for use with key management services like Azure KeyVault.  ### 
        'assign-identity': "{{ item['assign-identity'] | default('') }}" 
         ###  Optional parameter. User domain assigned to the storage account. Name is the CNAME source. Use "" to clear existing value.  ### 
        'custom-domain': "{{ item['custom-domain'] | default('') }}" 
         ###  Optional parameter.   ### 
        'encryption-key-source': "{{ item['encryption-key-source'] | default('') }}" 
         ###  Optional parameter.   ### 
        'encryption-key-vault-properties': "{{ item['encryption-key-vault-properties'] | default('') }}" 
         ###  Optional parameter. Specifies which service(s) to encrypt.  ### 
        'encryption-services': "{{ item['encryption-services'] | default('') }}" 
         ###  Optional parameter. Allows https traffic only to storage service.  ### 
        'https-only': "{{ item['https-only'] | default('') }}" 
         ###  Optional parameter. The storage account SKU.  ### 
        'sku': "{{ item['sku'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. Specify whether to use indirect CNAME validation.  ### 
        'use-subdomain': "{{ item['use-subdomain'] | default('') }}" 
         ###  Optional parameter. Bypass traffic for space-separated uses.  ### 
        'bypass': "{{ item['bypass'] | default('') }}" 
         ###  Optional parameter. Default action to apply when no rule matches.  ### 
        'default-action': "{{ item['default-action'] | default('') }}" 
         ###  Optional parameter. Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.  ### 
        'add': "{{ item['add'] | default('') }}" 
         ###  Optional parameter. Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.  ### 
        'remove': "{{ item['remove'] | default('') }}" 
         ###  Optional parameter. Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.  ### 
        'set': "{{ item['set'] | default('') }}" 
 - debug: msg="{{ az_storage_account_update }}"          
 - name: "az storage account update: Update the properties of a storage account." 
   command: |                                      
     az storage account update                            
                 --name {{ az_storage_account_update.input['name'] }} 
                 --resource-group {{ az_storage_account_update.input['resource-group'] }} 
                 {%if az_storage_account_update.input['access-tier'] %} --access-tier az_storage_account_update.input['access-tier'] {%endif %} 
                 {%if az_storage_account_update.input['assign-identity'] %} --assign-identity az_storage_account_update.input['assign-identity'] {%endif %} 
                 {%if az_storage_account_update.input['custom-domain'] %} --custom-domain az_storage_account_update.input['custom-domain'] {%endif %} 
                 {%if az_storage_account_update.input['encryption-key-source'] %} --encryption-key-source az_storage_account_update.input['encryption-key-source'] {%endif %} 
                 {%if az_storage_account_update.input['encryption-key-vault-properties'] %} --encryption-key-vault-properties az_storage_account_update.input['encryption-key-vault-properties'] {%endif %} 
                 {%if az_storage_account_update.input['encryption-services'] %} --encryption-services az_storage_account_update.input['encryption-services'] {%endif %} 
                 {%if az_storage_account_update.input['https-only'] %} --https-only az_storage_account_update.input['https-only'] {%endif %} 
                 {%if az_storage_account_update.input['sku'] %} --sku az_storage_account_update.input['sku'] {%endif %} 
                 {%if az_storage_account_update.input['rtags'] %} --tags az_storage_account_update.input['rtags'] {%endif %} 
                 {%if az_storage_account_update.input['use-subdomain'] %} --use-subdomain az_storage_account_update.input['use-subdomain'] {%endif %} 
                 {%if az_storage_account_update.input['bypass'] %} --bypass az_storage_account_update.input['bypass'] {%endif %} 
                 {%if az_storage_account_update.input['default-action'] %} --default-action az_storage_account_update.input['default-action'] {%endif %} 
                 {%if az_storage_account_update.input['add'] %} --add az_storage_account_update.input['add'] {%endif %} 
                 {%if az_storage_account_update.input['remove'] %} --remove az_storage_account_update.input['remove'] {%endif %} 
                 {%if az_storage_account_update.input['set'] %} --set az_storage_account_update.input['set'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_account_update: "{{ az_storage_account_update|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_account_update }}" 
