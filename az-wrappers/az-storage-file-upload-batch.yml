

 - name: Set input params for az_storage_file_upload_batch
   set_fact: 
     az_storage_file_upload_batch:
       input: 
         ###  Required parameter. The destination of the upload operation.  ### 
        'destination': "{{ item['destination'] | default('') }}" 
         ###  Required parameter. The directory to upload files from.  ### 
        'source': "{{ item['source'] | default('') }}" 
         ###  Optional parameter. List the files and blobs to be uploaded. No actual data transfer will occur.  ### 
        'dryrun': "{{ item['dryrun'] | default('') }}" 
         ###  Optional parameter. Metadata in space-separated key=value pairs. This overwrites any existing metadata.  ### 
        'metadata': "{{ item['metadata'] | default('') }}" 
         ###  Optional parameter. The pattern used for file globbing. The supported patterns are '*', '?', '[seq', and '[!seq]'.  ### 
        'pattern': "{{ item['pattern'] | default('') }}" 
         ###  Optional parameter. If set, calculates an MD5 hash for each range of the file for validation.  ### 
        'validate-content': "{{ item['validate-content'] | default('') }}" 
         ###  Optional parameter. The cache control string.  ### 
        'content-cache-control': "{{ item['content-cache-control'] | default('') }}" 
         ###  Optional parameter. Conveys additional information about how to process the response payload, and can also be used to attach additional metadata.  ### 
        'content-disposition': "{{ item['content-disposition'] | default('') }}" 
         ###  Optional parameter. The content encoding type.  ### 
        'content-encoding': "{{ item['content-encoding'] | default('') }}" 
         ###  Optional parameter. The content language.  ### 
        'content-language': "{{ item['content-language'] | default('') }}" 
         ###  Optional parameter. The content's MD5 hash.  ### 
        'content-md5': "{{ item['content-md5'] | default('') }}" 
         ###  Optional parameter. The content MIME type.  ### 
        'content-type': "{{ item['content-type'] | default('') }}" 
         ###  Optional parameter. The maximum number of parallel connections to use. Default value is 1.  ### 
        'max-connections': "{{ item['max-connections'] | default('') }}" 
         ###  Optional parameter. Storage account key. Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_KEY.  ### 
        'account-key': "{{ item['account-key'] | default('') }}" 
         ###  Optional parameter. Storage account name. Related environment variable: AZURE_STORAGE_ACCOUNT. Must be used in conjunction with either storage account key or a SAS token. If neither are present, the command will try to query the storage account key using the authenticated Azure account. If a large number of storage commands are executed the API quota may be hit.  ### 
        'account-name': "{{ item['account-name'] | default('') }}" 
         ###  Optional parameter. Storage account connection string. Environment variable: AZURE_STORAGE_CONNECTION_STRING.  ### 
        'connection-string': "{{ item['connection-string'] | default('') }}" 
         ###  Optional parameter. A Shared Access Signature (SAS). Must be used in conjunction with storage account name. Environment variable: AZURE_STORAGE_SAS_TOKEN.  ### 
        'sas-token': "{{ item['sas-token'] | default('') }}" 
 - debug: msg="{{ az_storage_file_upload_batch }}"          
 - name: "az storage file upload-batch: Upload files from a local directory to an Azure Storage File Share in a batch operation." 
   command: |                                      
     az storage file upload-batch                            
                 --destination {{ az_storage_file_upload_batch.input['destination'] }} 
                 --source {{ az_storage_file_upload_batch.input['source'] }} 
                 {%if az_storage_file_upload_batch.input['dryrun'] %} --dryrun az_storage_file_upload_batch.input['dryrun'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['metadata'] %} --metadata az_storage_file_upload_batch.input['metadata'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['pattern'] %} --pattern az_storage_file_upload_batch.input['pattern'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['validate-content'] %} --validate-content az_storage_file_upload_batch.input['validate-content'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-cache-control'] %} --content-cache-control az_storage_file_upload_batch.input['content-cache-control'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-disposition'] %} --content-disposition az_storage_file_upload_batch.input['content-disposition'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-encoding'] %} --content-encoding az_storage_file_upload_batch.input['content-encoding'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-language'] %} --content-language az_storage_file_upload_batch.input['content-language'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-md5'] %} --content-md5 az_storage_file_upload_batch.input['content-md5'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['content-type'] %} --content-type az_storage_file_upload_batch.input['content-type'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['max-connections'] %} --max-connections az_storage_file_upload_batch.input['max-connections'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['account-key'] %} --account-key az_storage_file_upload_batch.input['account-key'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['account-name'] %} --account-name az_storage_file_upload_batch.input['account-name'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['connection-string'] %} --connection-string az_storage_file_upload_batch.input['connection-string'] {%endif %} 
                 {%if az_storage_file_upload_batch.input['sas-token'] %} --sas-token az_storage_file_upload_batch.input['sas-token'] {%endif %} 
   register: output  
 - set_fact: 
    az_storage_file_upload_batch: "{{ az_storage_file_upload_batch|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_storage_file_upload_batch }}" 
