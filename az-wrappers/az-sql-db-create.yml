

 - name: Set input params for az_sql_db_create
   set_fact: 
     az_sql_db_create:
       input: 
         ###  Required parameter. Name of the Azure SQL Database.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Required parameter. Name of the Azure SQL server.  ### 
        'server': "{{ item['server'] | default('') }}" 
         ###  Optional parameter. The collation of the database. If createMode is not Default, this value is ignored.  ### 
        'collation': "{{ item['collation'] | default('') }}" 
         ###  Optional parameter. The edition of the database.  ### 
        'edition': "{{ item['edition'] | default('') }}" 
         ###  Optional parameter. The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.  ### 
        'elastic-pool': "{{ item['elastic-pool'] | default('') }}" 
         ###  Optional parameter. The max storage size of the database. Only the following sizes are supported (in addition to limitations being placed on each edition): 100MB, 500MB, 1GB, 5GB, 10GB, 20GB, 30GB, 150GB, 200GB, 500GB. If no unit is specified, defaults to bytes (B).  ### 
        'max-size': "{{ item['max-size'] | default('') }}" 
         ###  Optional parameter. Do not wait for the long-running operation to finish.  ### 
        'no-wait': "{{ item['no-wait'] | default('') }}" 
         ###  Optional parameter. Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.  ### 
        'sample-name': "{{ item['sample-name'] | default('') }}" 
         ###  Optional parameter. The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: "Capabilities_ListByLocation.".  ### 
        'service-objective': "{{ item['service-objective'] | default('') }}" 
         ###  Optional parameter. Resource tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
 - debug: msg="{{ az_sql_db_create }}"          
 - name: "az sql db create: Create a database." 
   command: |                                      
     az sql db create                            
                 --name {{ az_sql_db_create.input['name'] }} 
                 --resource-group {{ az_sql_db_create.input['resource-group'] }} 
                 --server {{ az_sql_db_create.input['server'] }} 
                 {%if az_sql_db_create.input['collation'] %} --collation az_sql_db_create.input['collation'] {%endif %} 
                 {%if az_sql_db_create.input['edition'] %} --edition az_sql_db_create.input['edition'] {%endif %} 
                 {%if az_sql_db_create.input['elastic-pool'] %} --elastic-pool az_sql_db_create.input['elastic-pool'] {%endif %} 
                 {%if az_sql_db_create.input['max-size'] %} --max-size az_sql_db_create.input['max-size'] {%endif %} 
                 {%if az_sql_db_create.input['no-wait'] %} --no-wait az_sql_db_create.input['no-wait'] {%endif %} 
                 {%if az_sql_db_create.input['sample-name'] %} --sample-name az_sql_db_create.input['sample-name'] {%endif %} 
                 {%if az_sql_db_create.input['service-objective'] %} --service-objective az_sql_db_create.input['service-objective'] {%endif %} 
                 {%if az_sql_db_create.input['rtags'] %} --tags az_sql_db_create.input['rtags'] {%endif %} 
   register: output  
 - set_fact: 
    az_sql_db_create: "{{ az_sql_db_create|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_sql_db_create }}" 
