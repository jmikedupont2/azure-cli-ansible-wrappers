

 - name: Set input params for az_network_asg_update
   set_fact: 
     az_network_asg_update:
       input: 
         ###  Required parameter. The name of the application security group.  ### 
        'name': "{{ item['name'] | default('') }}" 
         ###  Required parameter. Name of resource group. You can configure the default group using `az configure --defaults group=&lt;name&gt;`.  ### 
        'resource-group': "{{ item['resource-group'] | default('') }}" 
         ###  Optional parameter. Space separated tags in 'key[=value]' format. Use "" to clear existing tags.  ### 
        'rtags': "{{ item['rtags'] | default('') }}" 
         ###  Optional parameter. Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.  ### 
        'add': "{{ item['add'] | default('') }}" 
         ###  Optional parameter. Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.  ### 
        'remove': "{{ item['remove'] | default('') }}" 
         ###  Optional parameter. Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.  ### 
        'set': "{{ item['set'] | default('') }}" 
 - debug: msg="{{ az_network_asg_update }}"          
 - name: "az network asg update: Update an application security group." 
   command: |                                      
     az network asg update                            
                 --name {{ az_network_asg_update.input['name'] }} 
                 --resource-group {{ az_network_asg_update.input['resource-group'] }} 
                 {%if az_network_asg_update.input['rtags'] %} --tags az_network_asg_update.input['rtags'] {%endif %} 
                 {%if az_network_asg_update.input['add'] %} --add az_network_asg_update.input['add'] {%endif %} 
                 {%if az_network_asg_update.input['remove'] %} --remove az_network_asg_update.input['remove'] {%endif %} 
                 {%if az_network_asg_update.input['set'] %} --set az_network_asg_update.input['set'] {%endif %} 
   register: output  
 - set_fact: 
    az_network_asg_update: "{{ az_network_asg_update|combine({'output':output.stdout|from_json}) }}"  
 - debug: msg="{{ az_network_asg_update }}" 
